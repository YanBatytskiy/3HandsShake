#include <algorithm>
#include <iostream>
#include <iterator>
#include <string>
#include <vector>

#define SIZE 40

void fillOutputRecur2(std::vector<std::vector<std::string>> &meetList,
                      std::vector<std::vector<std::string>> &adjList,
                      std::vector<std::string> &people, int depthCount,
                      int vertexIndex, int index) {

  if (depthCount > 2) {
    return;
  }

  int sizeK = adjList[vertexIndex].size();

  for (int i = 0; i < sizeK; ++i) {

    std::string current = adjList[vertexIndex][i];
    auto it = std::find(people.begin(), people.end(), current);
    int indexCurrent = std::distance(people.begin(), it);

    bool alreadyAdd = false;
    for (int j = 0; j < meetList[index].size(); ++j) {

      if (current == meetList[index][j]) {
        alreadyAdd = true;
        break;
      }
    }

    if (!alreadyAdd && current != people[index]) {
      meetList[index].push_back(adjList[vertexIndex][i]);
    }

    ++depthCount;
    fillOutputRecur2(meetList, adjList, people, depthCount, indexCurrent,
                     index);
    --depthCount;
  }
}

int main() {
  std::vector<std::string> people = {
      "Алексей",  "Борис",  "Виктор",  "Галина", "Дарья",    "Евгений",
      "Жанна",    "Зоя",    "Иван",    "Кирилл", "Леонид",   "Марина",
      "Никита",   "Ольга",  "Павел",   "Руслан", "Светлана", "Тимур",
      "Ульяна",   "Фёдор",  "Харитон", "Цезарь", "Чеслав",   "Шамиль",
      "Эдуард",   "Юлия",   "Яна",     "Андрей", "Белла",    "Вадим",
      "Григорий", "Диана",  "Елена",   "Жора",   "Инга",     "Карина",
      "Лариса",   "Михаил", "Надежда", "Олег"};

  std::vector<std::vector<std::string>> adjList = {
      {"Борис", "Виктор", "Галина"}, // Алексей
      {"Алексей", "Дарья", "Евгений",
       "Жанна"}, // Борис (добавили горизонтальную связь с Жанной)
      {"Алексей", "Жанна", "Зоя"}, // Виктор (горизонтально связали с Зоей)
      {"Алексей", "Зоя", "Дарья"}, // Галина (связали с Дарьей)
      {"Борис", "Иван", "Кирилл",
       "Галина"}, // Дарья (связали горизонтально с Галиной)
      {"Борис", "Леонид", "Марина"}, // Евгений (связали с Мариной)
      {"Виктор", "Марина", "Никита",
       "Борис"}, // Жанна (связали горизонтально с Борисом)
      {"Галина", "Ольга", "Виктор"}, // Зоя (связали с Виктором)
      {"Дарья", "Павел", "Руслан"}, // Иван (связали с Русланом)
      {"Дарья", "Руслан", "Светлана"}, // Кирилл
      {"Евгений", "Тимур", "Никита"}, // Леонид (связали с Никитой)
      {"Жанна", "Ульяна",
       "Евгений"}, // Марина (связали горизонтально с Евгением)
      {"Жанна", "Фёдор", "Леонид"}, // Никита (связали горизонтально с Леонидом)
      {"Зоя", "Харитон", "Цезарь"}, // Ольга
      {"Иван", "Чеслав",
       "Светлана"}, // Павел (связали горизонтально со Светланой)
      {"Кирилл", "Шамиль", "Иван"}, // Руслан (связали горизонтально с Иваном)
      {"Кирилл", "Эдуард",
       "Павел"}, // Светлана (связали горизонтально с Павлом)
      {"Леонид", "Юлия", "Ульяна"}, // Тимур (связали с Ульяной)
      {"Марина", "Яна", "Тимур"}, // Ульяна (связали с Тимуром)
      {"Никита", "Андрей", "Белла"}, // Фёдор (связали с Беллой)
      {"Ольга", "Белла", "Вадим"}, // Харитон
      {"Ольга", "Вадим", "Белла"}, // Цезарь (связали горизонтально с Беллой)
      {"Павел", "Григорий", "Шамиль"}, // Чеслав (связали с Шамилем)
      {"Руслан", "Диана", "Чеслав"}, // Шамиль (связали с Чеславом)
      {"Светлана", "Елена", "Юлия"}, // Эдуард (связали с Юлией)
      {"Тимур", "Жора", "Эдуард"}, // Юлия (связали с Эдуардом)
      {"Ульяна", "Инга", "Андрей"}, // Яна (связали с Андреем)
      {"Фёдор", "Карина", "Яна"},   // Андрей (связали с Яной)
      {"Харитон", "Лариса", "Фёдор",
       "Цезарь"}, // Белла (связали с Фёдором и Цезарем)
      {"Цезарь", "Михаил",
       "Харитон"}, // Вадим (связали горизонтально с Харитоном)
      {"Чеслав", "Надежда", "Диана"}, // Григорий (связали с Дианой)
      {"Шамиль", "Олег",
       "Григорий"}, // Диана (связали горизонтально с Григорием)
      {"Эдуард", "Жора"}, // Елена
      {"Юлия", "Елена"},  // Жора (связали с Еленой)
      {"Яна", "Карина"}, // Инга (связали горизонтально с Кариной)
      {"Андрей", "Инга"}, // Карина (связали горизонтально с Ингой)
      {"Белла", "Михаил"}, // Лариса (связали горизонтально с Михаилом)
      {"Вадим", "Лариса"}, // Михаил (связали горизонтально с Ларисой)
      {"Григорий", "Олег"}, // Надежда (связали горизонтально с Олегом)
      {"Диана", "Надежда"} // Олег (связали горизонтально с Надеждой)
  };

  std::vector<std::vector<std::string>> meetList;

  for (int i = 0; i < SIZE; ++i)
    meetList.push_back({});

  int index = 0;
  int vertexIndex = 0;
  int depthCount = 0;

  for (int i = 0; i < SIZE; ++i) {
    fillOutputRecur2(meetList, adjList, people, depthCount, i, i);
  }

  for (int i = 0; i < people.size(); i++) {
    std::cout << people[i] << " and friends: ";
    for (auto &friendName : meetList[i])
      std::cout << friendName << ", ";
    std::cout << std::endl;
  }

  return 0;
}